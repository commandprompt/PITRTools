
 pitrtools
 Â© COPYRIGHT Command Prompt, Inc.
 May 5, 2013

 The cmd_standby script is a utility that allows easy management of all types of 
 standby PostgreSQL servers, from cold to warm and streaming replication. It is
 run on the standby host.
 
 It currently has the following capabilities:

 * Easily take a base backup, including table spaces
 * Restore archives
 * Automatically purge old archives
 * Alert based on failures
 * Stop and start PostgreSQL standby
 * Failover to the latest restore point and point-in-time recovery



Usage: 

 cmd_standby [options] arg1 arg2

 Options:
   -h, --help           show this help message and exit
   -A start|stop, --action=start|stop
                        Start or Stop PostgreSQL
   -B, --basebackup     Start/Stop a base backup. Run with -I before this.
   -C FILE, --config=FILE
                        the name of the standby config file
   -F VALUE, --failover=VALUE
                        Value is a 3 digit number 999

   -I, --dbinit         Create local filesystem directories like on the master.
   -P, --ping           Is my master alive?
   -R TIMESTAMP, --recovertotime=TIMESTAMP
                        If you need to restore to a specific point in time
   -S, --standby        Enter standby mode
 


The process:

 You need to apply cmd_standby.sql (cmd_standby.92.sql if you run PostgreSQL 9.2)
 to master database before starting standby process on slave.

 The process of configuring a standby slave boils down to the following:

   $ pitrtools/bin/cmd_standby -C pitrtools/etc/cmd_standby.ini -I

	Fix any problems it reports. Which is likely be pathing or permission
	issues.

   $ pitrtools/bin/cmd_standby -C pitrtools/etc/cmd_standby.ini -B

 	Will start the base backup and fix up pg_xlog if its linked.

   $ pitrtools/bin/cmd_standby -C pitrtools/etc/cmd_standby.ini -S

	If you want a warm standby or anything more fancier, use -S.
	If you want a cold one, you are done.


 To bring a warm standby into production run a failover action:

   $ pitrtools/bin/cmd_standby -C pitrtools/etc/cmd_standby.ini -F999

 To bring a standby into production, but at a certain point in time do:

   $ pitrtools/bin/cmd_standby -C pitrtools/etc/cmd_standby.ini -F999 -R '2008-05-28 11:00:38.059389'

 Where -R is a valid timestamp.



Configuration:

 [DEFAULT]

 pgversion: 9.2

	What version of PostgreSQL are we running? NOTE: Versions below 9.2 are not compatible.

 use_streaming_replication: off

	If set to on, the recovery.conf file generated on the standby server will
	use parameters for streaming replication. Also, the parameters trigger_file,
	repl_db_user and repl_db_password will be needed.

 trigger_file: %(pgdata)/cmd_end_recovery

	Is the file that the "cmd_standby -C cmd_standby.ini -F999" command would
	create in order to bring the former standby online. If you change this
	parameter you will need to update recovery.conf file or	maybe shutdown
	running PostgreSQL and re-run the -S command.

 repl_db_user: postgres

	User that the standby server will use to connect to master server for
	replication purposes.

 repl_db_password: secretpassword

	Password that the standby will use to connect to master for replication purposes.
	This one can be empty, if you decide to store the password in a .pgpass file.

 sslmode:

	sslmode to use while connecting to master server for streaming replication.
	Defaults to 'prefer', accepted values are: 
	
		disable, allow, prefer, require, verfiy-ca, verify-full

	See more at http://www.postgresql.org/docs/current/static/libpq-ssl.html

 includepath: /usr/bin:/bin:/usr/local/bin

        Directories to include when searching for executables; separated by colons. Also used to locate remote psql executable on master.

 rsync_flags: -z

	Optional flags to pass to rsync (compression, etc.)

 rsync_threads: 2

        Number of rsync threads to use when performing a base backup.

 port: 5432

	The port on the master that PostgreSQL is listening

 master_public_ip: 192.168.3.254

	The external available ip address for ssh

 master_local_ip: 127.0.0.1

	The internal IP address psql should connect to on the master

 user: postgres

	The user who performed initdb

 debug: on

	If you want the diagnostic info

 ssh_debug: on

	If you want lots of ssh diagnostic info

 ssh_timeout: 30

	If ssh can not connect in this many seconds, we will throw an alarm and exit.

 archivedir: /var/lib/postgresql/archive/

	This is where cmd_archiver is copying files from the master to the standby.

 pgdata: /var/lib/postgresql/9.2/main

	The absolute path to your cluster directory.

 pg_conf_failover: /var/lib/postgresql/pitrtools/etc/pg_conf_failover/postgresql.conf

	The absolute path to the postgresql.conf to use when we failover to become a master.

 pg_hba_conf_failover: /var/lib/postgresql/pitrtools/etc/pg_conf_failover/pg_hba.conf

	The absolute path to the pg_hba.conf to use when we failover to become a master.


 postgresql_conf: /var/lib/postgresql/pitrtools/etc/pg_conf/postgresql.conf

	The absolute path to the postgresql.conf to use when we bring up the standby.

 pg_hba_conf: /var/lib/postgresql/pitrtools/etc/pg_conf/pg_hba.conf

	The absolute path to the pg_hba.conf to use when we bring up the standby.

 no_copy_conf: off

	By default postgresql.conf and pg_hba.conf will be copied from the
	locations specified above to pgdata directory on failover. Set this
	to on to make postgres actually use the above conf files without
	copying them to pgdata.

 recovery_conf: /var/lib/postgresql/9.2/main/recovery.conf

	The absolute path to the recovery.conf to create when we failover.
	This defaults to %(pgdata)/recovery.conf

 logfile: /var/log/postgresql/postgresql.log

	The absolute path to file where to append the server log (optional).
	Useful when postgresql.conf doesn't specify log destination. Will be
	passed with -l to pg_ctl when starting the server.

 notify_critical: 
 notify_warning:
 notify_ok:

	Absolute paths to the script to fire at each alarm level.

 action_failover: /var/lib/postgresql/pitrtools/failover.sh

	Absolute path to the script to fire at the end of failover. This might be
	to change an IP address on the slave (for example).

